{"ast":null,"code":"var _jsxFileName = \"/home/asus/Documents/suman/react/textutils/src/components/Textform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Textform(props) {\n  _s();\n\n  const handleUpClick = event => {\n    setText(text.toUpperCase());\n  };\n\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n\n  const handleUpCount = event => {\n    let count = 0;\n    let wordcnt = 0;\n    wordcnt = text.split(' ').length;\n\n    for (let i = 0; i < text.length; i++) {\n      count += 1;\n    }\n\n    if (text === '') {\n      wordcnt = 0;\n    }\n\n    return [count, wordcnt];\n  };\n\n  const [text, setText] = useState('Enter the text to modify it.');\n  const [count, wordcnt] = handleUpCount();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleOnChange,\n        id: \"exampleFormControlTextarea1\",\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpClick,\n      children: \"Convert to uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mx-2\",\n      onClick: handleUpCount,\n      children: \"Count Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"my-2\",\n      children: [\"Total Characters: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total words: \", wordcnt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Textform, \"NREpoFhpTF5ZPXXeMe6ra0HLF94=\");\n\n_c = Textform;\nTextform.prototype = {\n  header: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"sources":["/home/asus/Documents/suman/react/textutils/src/components/Textform.js"],"names":["React","useState","PropTypes","Textform","props","handleUpClick","event","setText","text","toUpperCase","handleOnChange","target","value","handleUpCount","count","wordcnt","split","length","i","header","prototype","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAMC,aAAa,GAAIC,KAAD,IAAS;AAC3BC,IAAAA,OAAO,CAACC,IAAI,CAACC,WAAL,EAAD,CAAP;AACH,GAFD;;AAGA,QAAMC,cAAc,GAAIJ,KAAD,IAAS;AAC5BC,IAAAA,OAAO,CAACD,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAGA,QAAMC,aAAa,GAAIP,KAAD,IAAU;AAC5B,QAAIQ,KAAK,GAAG,CAAZ;AACA,QAAIC,OAAO,GAAG,CAAd;AACAA,IAAAA,OAAO,GAAGP,IAAI,CAACQ,KAAL,CAAW,GAAX,EAAgBC,MAA1B;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACV,IAAI,CAACS,MAApB,EAA4BC,CAAC,EAA7B,EAAgC;AAC5BJ,MAAAA,KAAK,IAAG,CAAR;AACH;;AACD,QAAGN,IAAI,KAAK,EAAZ,EAAe;AACXO,MAAAA,OAAO,GAAE,CAAT;AACH;;AACD,WAAO,CAACD,KAAD,EAAQC,OAAR,CAAP;AACH,GAXD;;AAYA,QAAM,CAACP,IAAD,EAAOD,OAAP,IAAkBN,QAAQ,CAAC,8BAAD,CAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,OAAR,IAAmBF,aAAa,EAAtC;AACA,sBACI;AAAA,4BACI;AAAA,gBAAKT,KAAK,CAACe;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACA;AAAU,QAAA,SAAS,EAAC,cAApB;AAAmC,QAAA,KAAK,EAAEX,IAA1C;AAAgD,QAAA,QAAQ,EAAEE,cAA1D;AAA0E,QAAA,EAAE,EAAC,6BAA7E;AAA2G,QAAA,IAAI,EAAC;AAAhH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAEL,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAMA;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAEQ,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANA,eAOA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,uCAAwCC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA,eAQA;AAAA,kCAAkBC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAjCuBZ,Q;;KAAAA,Q;AAmCxBA,QAAQ,CAACiB,SAAT,GAAqB;AACjBD,EAAAA,MAAM,EAAEjB,SAAS,CAACmB,MAAV,CAAiBC;AADR,CAArB","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport default function Textform(props) {\n    const handleUpClick = (event)=>{\n        setText(text.toUpperCase());\n    }\n    const handleOnChange = (event)=>{\n        setText(event.target.value)\n    }\n    const handleUpCount = (event) =>{\n        let count = 0;\n        let wordcnt = 0;\n        wordcnt = text.split(' ').length;\n        for(let i=0; i<text.length; i++){\n            count +=1;\n        }\n        if(text === ''){\n            wordcnt =0;\n        }\n        return [count, wordcnt];\n    }\n    const [text, setText] = useState('Enter the text to modify it.');\n    const [count, wordcnt] = handleUpCount();\n    return (\n        <div>\n            <h1>{props.header}</h1>\n        <div className=\"mb-3\">\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\n        </div>\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to uppercase</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpCount}>Count Characters</button>\n        <h3 className='my-2'>Total Characters: {count}</h3>\n        <h3>Total words: {wordcnt}</h3>\n    </div>\n  )\n}\n\nTextform.prototype = {\n    header: PropTypes.string.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}