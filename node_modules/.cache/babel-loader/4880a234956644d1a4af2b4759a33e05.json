{"ast":null,"code":"var _jsxFileName = \"/home/asus/Documents/suman/react/textutils/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      document.body.style.background = `black`;\n      document.body.style.transition = 'all 1s';\n      setMode('dark');\n      showAlert('Enabled Dark Mode', 'Success');\n    } else {\n      setMode('light');\n      document.body.style.transition = 'all 1s';\n      document.body.style.background = 'white';\n      showAlert('Disabled Dark Mode', 'Success');\n    }\n  };\n\n  let animation = {\n    transition: 'all 1s'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text Utils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      animation: animation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/asus/Documents/suman/react/textutils/src/App.js"],"names":["React","useState","Navbar","Textform","Alert","About","BrowserRouter","Router","Switch","Route","Link","App","mode","setMode","alert","setAlert","showAlert","message","type","setTimeout","toggleMode","document","body","style","background","transition","animation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;;;AAQA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;;AAOA,QAAMe,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAiB;AACjCH,IAAAA,QAAQ,CAAC;AACPE,MAAAA,OAAO,EAACA,OADD;AAEPC,MAAAA,IAAI,EAACA;AAFE,KAAD,CAAR;AAIAC,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GARD;;AASA,QAAMK,UAAU,GAAG,MAAI;AAErB,QAAGR,IAAI,KAAK,OAAZ,EAAoB;AAClBS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAkC,OAAlC;AACAH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,UAApB,GAAiC,QAAjC;AACAZ,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAG,MAAAA,SAAS,CAAC,mBAAD,EAAsB,SAAtB,CAAT;AACD,KALD,MAKK;AACHH,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAQ,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,UAApB,GAAiC,QAAjC;AACAJ,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAiC,OAAjC;AACAR,MAAAA,SAAS,CAAC,oBAAD,EAAuB,SAAvB,CAAT;AACD;AACF,GAbD;;AAeA,MAAIU,SAAS,GAAG;AACdD,IAAAA,UAAU,EAAE;AADE,GAAhB;AAOA,sBACA;AAAA,4BAEA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,YAAd;AAA2B,MAAA,IAAI,EAAEb,IAAjC;AAAuC,MAAA,UAAU,EAAEQ,UAAnD;AAA+D,MAAA,SAAS,EAAEM;AAA1E;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEZ;AAAd;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACA,QAAC,MAAD;AAAA,gCACQ,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADR,eAIQ,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAJR;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAWC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADA;AAqBD;;GA7DQH,G;;KAAAA,G;AA+DT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert'\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  \n\n  \n  \n\n  const showAlert = (message, type)=>{\n    setAlert({\n      message:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  const toggleMode = ()=>{\n   \n    if(mode === 'light'){\n      document.body.style.background = `black`;\n      document.body.style.transition = 'all 1s'\n      setMode('dark')\n      showAlert('Enabled Dark Mode', 'Success')\n    }else{\n      setMode('light')\n      document.body.style.transition = 'all 1s'\n      document.body.style.background = 'white';\n      showAlert('Disabled Dark Mode', 'Success')\n    }\n  }\n  \n  let animation = {\n    transition: 'all 1s',\n  }\n\n  \n\n  \n  return (\n  <>\n\n  <Navbar title=\"Text Utils\" mode={mode} toggleMode={toggleMode} animation={animation}/>\n  <Alert alert={alert} />\n  <div className=\"container my-3\">\n  <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n                \n          </Route>\n        </Switch>\n\n    \n   <About />\n    \n  </div>\n      </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}